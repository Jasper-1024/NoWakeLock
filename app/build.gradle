plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'androidx.navigation.safeargs.kotlin'
}

android {
//    compileSdkVersion 33
//    buildToolsVersion '33.0.0'

    defaultConfig {
        applicationId "com.js.nowakelock"
        minSdkVersion 24
        compileSdk 33
//        targetSdkVersion 33
        versionCode 57
        versionName "2.0.0-beta4-1"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        vectorDrawables {
            useSupportLibrary = true
        }
        // work-runtime-ktx 2.1.0 and above now requires Java 8
        kotlinOptions {
            jvmTarget = "17"
        }

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation":
                                     "$projectDir/schemas".toString()]
            }
        }

    }

    android.applicationVariants.configureEach { variant ->
        variant.outputs.all {
            outputFileName = "${buildType.name}-${versionName}.apk"
        }
    }
    //room test
    sourceSets {
        androidTest.assets.srcDirs += files("$projectDir/schemas".toString())
    }

    buildFeatures {
        dataBinding true
    }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    namespace 'com.js.nowakelock'

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.9.0"
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.core:core-ktx:1.10.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.3.1'
    implementation "androidx.recyclerview:recyclerview-selection:1.1.0"
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    //Xposed
    compileOnly 'de.robv.android.xposed:api:82'
    //如果需要引入文档，方便查看的话
    compileOnly 'de.robv.android.xposed:api:82:sources'

    //ktx
    implementation 'androidx.core:core-ktx:1.10.1'

    //Room
    def room_version = "2.5.2"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    // For Kotlin use kapt instead of annotationProcessor
    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"
    // optional - RxJava support for Room
    implementation "androidx.room:room-rxjava2:$room_version"
    // optional - Guava support for Room, including Optional and ListenableFuture
    implementation "androidx.room:room-guava:$room_version"
    // Test helpers
    androidTestImplementation "androidx.room:room-testing:$room_version"

    def koin_android_version = '3.4.3'

    implementation "io.insert-koin:koin-android:$koin_android_version"
    // Java Compatibility
    implementation "io.insert-koin:koin-android-compat:$koin_android_version"
    // Jetpack WorkManager
    implementation "io.insert-koin:koin-androidx-workmanager:$koin_android_version"
    // Navigation Graph
    implementation "io.insert-koin:koin-androidx-navigation:$koin_android_version"

    //gson
    implementation 'com.google.code.gson:gson:2.10.1'


    def lifecycle_version = '2.6.1'
    def arch_version = "2.2.0"
    // ViewModel
    //noinspection GradleDependency
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    // Lifecycles only (without ViewModel or LiveData)
    //noinspection GradleDependency
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    // Saved state module for ViewModel
    //noinspection GradleDependency
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"
    // Annotation processor
    //noinspection LifecycleAnnotationProcessorWithJava8
    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"
    // alternately - if using Java8, use the following instead of lifecycle-compiler
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    // optional - ReactiveStreams support for LiveData
    implementation "androidx.lifecycle:lifecycle-reactivestreams-ktx:$lifecycle_version"
    // optional - Test helpers for LiveData
    androidTestImplementation "androidx.arch.core:core-testing:$arch_version"

    // Maven
    implementation 'androidx.annotation:annotation:1.6.0'

    //navigation
    def nav_version = "2.6.0"
    // Kotlin
    implementation "androidx.navigation:navigation-runtime-ktx:$nav_version"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // Dynamic Feature Module Support
    implementation "androidx.navigation:navigation-dynamic-features-fragment:$nav_version"

    // Testing Navigation
    androidTestImplementation "androidx.navigation:navigation-testing:$nav_version"

    //Klaxon for json
    implementation 'com.beust:klaxon:5.6'

    //preference(settings)
    def preference_version = '1.2.1'
    // Java language implementation
    //implementation "androidx.preference:preference:$preference_version"
    // Kotlin
    //noinspection GradleDependency
    implementation "androidx.preference:preference-ktx:$preference_version"

    //viewpager2
    implementation "androidx.viewpager2:viewpager2:1.0.0"
    implementation 'androidx.fragment:fragment-ktx:1.6.1'
    implementation 'com.google.android.material:material:1.9.0'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.9.0'

    //glide4
    implementation 'com.github.bumptech.glide:glide:4.15.1'
    kapt 'com.github.bumptech.glide:compiler:4.15.1'

    //noinspection GradleCompatible
    implementation 'androidx.core:core-ktx:1.10.1'

//    // Required -- JUnit 4 framework
//    testImplementation 'junit:junit:4.13'
//    // Optional -- Robolectric environment
//    testImplementation 'androidx.test:core:1.2.0'
//    // Optional -- Mockito framework
//    testImplementation 'org.mockito:mockito-core:2.25.0'
//
//    androidTestImplementation 'androidx.test:runner:1.2.0'
//    androidTestImplementation 'androidx.test:rules:1.2.0'
//    // Optional -- Hamcrest library
//    androidTestImplementation 'org.hamcrest:hamcrest-library:2.2'
//    // Optional -- UI testing with Espresso
//    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
//    // Optional -- UI testing with UI Automator
//    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'

    // Core library
    androidTestImplementation 'androidx.test:core:1.5.0'

    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation 'androidx.test:runner:1.5.2'
    androidTestImplementation 'androidx.test:rules:1.5.0'

    // Assertions
//    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
//    androidTestImplementation 'androidx.teklaxonst.ext:truth:1.3.0'
//    androidTestImplementation 'com.google.truth:truth:1.1.2'

    // Espresso dependencies
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.5.1'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.5.1'
    androidTestImplementation 'androidx.test.espresso:espresso-accessibility:3.5.1'
    androidTestImplementation 'androidx.test.espresso:espresso-web:3.5.1'
    androidTestImplementation 'androidx.test.espresso.idling:idling-concurrent:3.5.1'

    // The following Espresso dependency can be either "implementation"
    // or "androidTestImplementation", depending on whether you want the
    // dependency to appear on your APK's compile classpath or the test APK
    // classpath.
    androidTestImplementation 'androidx.test.espresso:espresso-idling-resource:3.5.1'

}
